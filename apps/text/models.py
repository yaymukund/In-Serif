"""
Document is the basic text document we will store. It has an autogenerated id
field (generated by Django on every model by default) that we use for URLs.

Document subclasses django_extensions.db.models.TimeStampModel, which just
contains 'created' and 'modified,' two DateTimeFields that are automatically
updated with the creation and modified date respectively.

DocumentForm constructs a form from a model. We use this in the create/update
views.

"""
from django.db import models
from django.contrib.auth.models import User
from django.forms import ModelForm
from django_extensions.db.models import TimeStampedModel

class Document(TimeStampedModel):
  title = models.CharField(max_length=100)
  author = models.CharField(max_length=100)
  content = models.TextField()
  private = models.BooleanField(default=False)

  # The owner of the document.
  user = models.ForeignKey(User, editable=False, null=True)

  def __unicode__(self):
    """Return a user-friendly representation of the object. Not unique."""
    return self.title

  @models.permalink
  def get_absolute_url(self):
    """Return a full url to the document in tuple form.

    For more information, see the @models.permalink documentation.

    """
    return ('text.views.document_view', [str(self.id)])

class DocumentForm(ModelForm):
  """Make a document form with all values from the Document model."""
  class Meta:
    model = Document
